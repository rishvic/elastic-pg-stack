input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.6.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://postgres:5432/cinebase"
    jdbc_user => cinebase
    jdbc_password => MR2rKD5XWU1WSfYMK0V6QXadf5zQ2lVCO9vBBSIPEcJIhuCL
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "*/5 * * * * *"
    statement => "SELECT *, EXTRACT(EPOCH FROM last_updated) AS unix_ts_in_secs FROM movies_movie WHERE (EXTRACT(EPOCH FROM last_updated) > :sql_last_value AND last_updated < NOW()) ORDER BY last_updated ASC"
    # prepared_statement_bind_values => [":sql_last_value"]
    # prepared_statement_name => "get_movies_prepsql"
    # use_prepared_statements => true
  }
}
filter {
  mutate {
    copy => { "id" => "[@metadata][_id]"}
    remove_field => ["id", "@version", "unix_ts_in_secs"]
  }
}
output {
  # stdout { codec =>  "rubydebug"}
  elasticsearch {
      user => "elastic"
      password => "Fhk0LwvYoK7D3JZ9eoUwbcm6wVY0wy204GIUdK8gR7kpi6JC"
      hosts => ["https://es01:9200"] 
      cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
      index => "rdbms_sync_idx"
      document_id => "%{[@metadata][_id]}"
  }
}
